@article{10.1007/s10817-009-9155-4,
author = {Leroy, Xavier},
title = {A Formally Verified Compiler Back-End},
year = {2009},
issue_date = {December  2009},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
volume = {43},
number = {4},
issn = {0168-7433},
url = {https://doi.org/10.1007/s10817-009-9155-4},
doi = {10.1007/s10817-009-9155-4},
abstract = {This article describes the development and formal verification (proof of semantic preservation) of a compiler back-end from Cminor (a simple imperative intermediate language) to PowerPC assembly code, using the Coq proof assistant both for programming the compiler and for proving its soundness. Such a verified compiler is useful in the context of formal methods applied to the certification of critical software: the verification of the compiler guarantees that the safety properties proved on the source code hold for the executable compiled code as well.},
journal = {J. Autom. Reason.},
month = {dec},
pages = {363â€“446},
numpages = {84},
keywords = {Compiler verification, Formal methods, Program proof, Semantic preservation, The Coq theorem prover, Compiler transformations and optimizations}
}